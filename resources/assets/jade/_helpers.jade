- var colors = [ "default","dark", "primary", "success", "warning", "danger"]
- var cardData = [{"title":"The Awesome Product","subtitle":"Chris Jones","tags":[{"name":"@barbs","link":"#"},{"name":"#test","link":"#"}],"featured_image":"http://lorempixel.com/image_output/fashion-q-c-300-225-10.jpg","time":"20 Jan 2016","image":"http://lorempixel.com/image_output/people-q-c-60-60-1.jpg","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis porta eros lacus, nec ultricies elit blandit non. Suspendisse pellentesque mauris sit amet dolor blandit rutrum. Nunc in tempus turpis."}]
- var mediaData = [{"name":"Barbara Middleton","tag":"@barbs","time":"30 mins ago","image":"http://lorempixel.com/image_output/people-q-c-60-60-1.jpg","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis porta eros lacus, nec ultricies elit blandit non. Suspendisse pellentesque mauris sit amet dolor blandit rutrum. Nunc in tempus turpis.","children":[{"name":"John Smith","tag":"","time":"20 mins ago","image":"http://lorempixel.com/image_output/people-q-c-60-60-2.jpg","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis porta eros lacus, nec ultricies elit blandit non. Suspendisse pellentesque mauris sit amet dolor blandit rutrum. Nunc in tempus turpis."},{"name":"John Smith","tag":"","time":"10 mins ago","image":"http://lorempixel.com/image_output/people-q-c-60-60-2.jpg","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis porta eros lacus, nec ultricies elit blandit non. Suspendisse pellentesque mauris sit amet dolor blandit rutrum. Nunc in tempus turpis."}]}]

mixin section(name, id, subtitle)
    h2.box-title.title= name
    if (subtitle)
        h3.subtitle= subtitle
    section(id=id class='box-'+id)
        if block
          block

mixin box-block
    .box.block.col&attributes(attributes)
        block

mixin side-box-block
    .on-sidelines.is-example&attributes(attributes)
        +box-block
            block

mixin code-block(code)
    .is-example-code
      pre.box
        code(class="language-html")= code

mixin swatch(classes)
    .col.col-sm-3.col-md-4.col-xs-6.text-center
        span .#{classes}
        div(class='color-swatch #{classes}')

mixin render-grid
    - var n = 1
    while n < 12
        .row
            if (n !== 1)
                div(class="col-"+n)= '.col-'+n
            else
                .col .col

            - for (var i=0;i<(12-n);i++)
                    .col .col
            - n++
    .row
        .col .col

//- General Tags Mixins
mixin meta
    meta&attributes(attributes)

mixin meta-default
    +meta(charset='utf8')
    +meta(http-equiv='X-UA-Compatible', content='IE=edge, chrome=1')
    +meta(name="viewport" content="width=device-width, initial-scale=1")

mixin div(id)
    div&attributes(attributes)
        block

//- Component Media Object
mixin image-block(type)
    - var classes = "media-image"; 
    if type == 'small'
        - classes = 'media-image is-40';
    else if type == 'card'
        - classes = "card-image is-4x3";

    figure(class=classes)   
        img&attributes(attributes)

mixin media-object-footer
    small
        a.do-like Like
        |  &middot; 
        a.do-reply Reply
        |  &middot; 
        block

mixin media-object(mediaData,recursive)
    .media&attributes(attributes)
        +image-block()(src=mediaData.image||'http://placehold.it/60x60')
        .media-content
            .content
                h4.title= mediaData.name
                if mediaData.tag.length > 0
                    small= mediaData.tag
                p= mediaData.content              
                +media-object-footer= mediaData.time||''
            if recursive === 'yes' && mediaData.children.length > 0
                each child in mediaData.children
                    +media-object(child)
            else
                block


//- Component Card
mixin card(cardData)
    .card&attributes(attributes)
        +image-block('card')(src=cardData.featured_image||'http://placehold.it/300x225', alt='')
        .card-content
            .media
                +image-block('small')(src=cardData.image||'http://placehold.it/40x40', alt='Image')      
                .media-content
                    h4.title= cardData.title
                    h6.subtitle= cardData.subtitle
            .content
                p= cardData.content
                each tag in cardData.tags
                    a(href=tag.link||'#')= tag.name
                small= cardData.time||''


//- Component Navigation
mixin list-link(href)
  li&attributes(attributes)
    a(href=href||'#')
        block

mixin list-divider
    li.is-divider
        block

mixin nav(type, data)
    if type == 'tabs'
        - var tp = 'tabs';
    else
        - var tp = 'nav';
    nav(class=tp role="navigation")&attributes(attributes)
        ul
            if data
                each item in data
                    if item == 'divider'
                        +list-divider
                    else
                        +list-link(data.link)(class=data.active?'active':"")= data.title
            else
                block

mixin tabs-link(href)
    li(role="presentation")&attributes(attributes)
        a(href='#'+href role="tab" id=href+"-tab" data-toggle="tab" aria-controls=href)
            block

mixin tab(id)
    .tab(role="tabpanel" id=id aria-labelledby=id+"-tab")&attributes(attributes)
        block


mixin tab-section(name, id)
    .tab(role="tabpanel" id=id aria-labelledby=id+"-tab")&attributes(attributes)
        h2.box-title= name
        section(class='box-'+id)
            if block
                block

//- Element heading
mixin heading(h)
  #{h}&attributes(attributes)
    block

//- Element Table
mixin table(tdata)
    table.table&attributes(attributes)
      thead
          tr
            each head in tdata.cols
                th= head
      tbody
        each row in tdata.rows
            tr
                each col in row
                    td= col

//- Elements Form
mixin form
  form.form&attributes(attributes)
    block

mixin form-select(data,hasEmpty)
  select.input&attributes(attributes)
    if hasEmpty
      - var selectData = {"name":"Select","value":"0"};
      +form-option(selectData)
    if data
      each option in data
        +form-option(option)
    else
      block

mixin form-option(option)
  option(value=option.value)= option.name

mixin form-checkbox
  label(for=attributes.id).checkbox
    input(type='checkbox')&attributes(attributes)
    block

mixin form-radio
  label(for=attributes.id).radio
    input(type='radio')&attributes(attributes)
    block

mixin form-input(name,labelText,inline)
  - var names = attributes.id||attributes.name||name;
  - var isInline = inline?'label':''
  if labelText
    label(for=names class=isInline)= labelText
  input.input(type=attributes.type||'text' id=names name=names)&attributes(attributes)

mixin form-textarea
  textarea.input&attributes(attributes)

//- Element Badge
mixin badge
    div(class="badge")&attributes(attributes)
        block

//- Element Alert
mixin alert
    div(class="alert")&attributes(attributes)
        block

//- Element Button
mixin button
    button(class="button")&attributes(attributes)
        block

//- Component Panel
mixin panel(title)
    div(class="panel")&attributes(attributes)
        if title
            header= title
        .panel-content
            block

mixin panel2(title)
    div(class="panel")&attributes(attributes)
        if title
            header= title
        .panel-content
            block

//- Looper
mixin loop(type, classes)
    each val in colors
        - var cv = val=='default'?' ':'is-'+val;
        - var clss = classes?(cv+' '+classes):cv;
        if type == 'badges'
            +badge(class=clss)= val
        else if type == 'alerts'
            +alert(class=clss)
                .can-close
                .title= val
                block
        else if type == 'buttons'
            +button(class=clss)= val
        else if type == 'panels'
            +panel('Panel Header - '+clss)(class=clss)
                block

mixin loop-headings(hs)
  each h in hs
    +heading(h).typo= h

//- BLOCKS
//- Block Navbar
mixin navbar(noToggle)
    nav.navbar&attributes(attributes)
        if !noToggle
            a.is-toggle(href="#")
                span
                span
                span
        block

mixin navbar-item
    .has-item&attributes(attributes)
        block


//- Block Modal
mixin modal
    .modal&attributes(attributes)
        .modal-box
            .has-content
                block


mixin modal-demotext
    h3.title
    p This is a modal window. You can do the following things with it:
    ul
        li 
            b Read: 
            | modal windows will probably tell you something important so don't forget to read what they say.
        li 
            b Look: 
            | a modal window enjoys a certain kind of attention; just look at it and appreciate its presence. 
        li 
            b Close: 
            | click on the button below to close the modal. 

    a.is-close.button.is-danger(data-close="modal") Close Me!